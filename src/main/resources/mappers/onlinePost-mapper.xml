<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="onlinePostMapper">
    

    <insert id="insertPost" parameterType="PostDTO">
         INSERT INTO TBL_POST VALUES(#{post_no},1,#{user_id},#{user_nickname},#{category_no},#{title},#{content},#{product_no},0,SYSDATE,'0')
    </insert>
    <select id="getPost_no" resultType="_int">
         SELECT POST_NO.NEXTVAL FROM DUAL
    </select>
    <select id="getPostInfo" resultType="PostDTO">
         SELECT * FROM TBL_POST WHERE POST_NO = #{post_no}
    </select>
    <delete id="deletePost" >
         DELETE FROM TBL_POST WHERE POST_NO = #{post_no}
    </delete>
    <update id="updatePost" parameterType="PostDTO">
         UPDATE TBL_POST SET CATEGORY_NO = #{category_no},TITLE = #{title},CONTENT = #{content}, PRODUCT_NO = #{product_no} WHERE POST_NO= #{post_no}
    </update>
    
    <!-- ============================================================================================================================================ -->
    
    <select id="selectRecent" resultType="map" parameterType="Object">
    	select a.post_no, a.title, b.system_name, rank() over(order by written_date DESC) as ranking from tbl_post a, tbl_image b where a.post_no = b.post_no
    	 
    </select>
    
    <select id="selectRecent4" resultType="map" parameterType="Object">
    	select * from (select a.post_no, a.title, b.system_name, rank() over(order by written_date DESC) as ranking from tbl_post a, tbl_image b where a.post_no = b.post_no)
    	 where ranking &lt; 5
    </select>
    
    <select id="selectLike" resultType="map" parameterType="Object">
    	select b.post_no, a.title, c.system_name, rank() over(order by count(b.post_no) DESC) as ranking 
		from tbl_post a inner join tbl_like b on a.post_no = b.post_no 
		inner join tbl_image c on a.post_no = c.post_no
		where b.type=1 group by b.post_no, a.title, c.system_name
    </select>
    
    <select id="selectLike4" resultType="map" parameterType="Object">
    	select * from(select b.post_no, a.title, c.system_name, rank() over(order by count(b.post_no) DESC) as ranking 
		from tbl_post a inner join tbl_like b on a.post_no = b.post_no 
		inner join tbl_image c on a.post_no = c.post_no
		where b.type=1 group by b.post_no, a.title, c.system_name)
		where ranking &lt; 5
    </select>
    
    <select id="selectAdmin" resultType="map" parameterType="Object">
    	select * from (select a.post_no, a.title, b.system_name from tbl_post a, tbl_image b where a.post_no = b.post_no)
   		 where post_no between 8 and 11
    </select>
    
    <select id="selectCat" resultType="map" parameterType="Object">
    	select a.post_no, a.title, b.child_group, c.system_name 
		from tbl_post a inner join tbl_image c on a.post_no=c.post_no 
		inner join tbl_category b using(category_no)
		where category_no=#{category_no}
    </select>
    
    <!-- ============================================================================================================================================ -->
    
    <select id="mainSearch" resultType="map" parameterType="String">
    SELECT
        P.POST_NO      
        ,P.TITLE           
        ,I.SYSTEM_NAME        
   	FROM TBL_POST P INNER JOIN TBL_IMAGE I
   	ON P.POST_NO = I.POST_NO 
   	WHERE P.TITLE LIKE '%${search}%'

   	UNION

   	SELECT
    	P.POST_NO            
        ,P.TITLE                 
        ,I.SYSTEM_NAME          	
   	FROM  TBL_POST P INNER JOIN TBL_IMAGE I
   	ON P.POST_NO = I.POST_NO
   	INNER JOIN TBL_CATEGORY C
   	ON P.CATEGORY_NO = C.CATEGORY_NO
   	WHERE C.CHILD_GROUP LIKE '%${search}%'
   	</select>
    
    
    
</mapper>
